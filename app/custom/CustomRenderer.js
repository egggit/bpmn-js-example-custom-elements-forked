import BaseRenderer from 'diagram-js/lib/draw/BaseRenderer';

import {
  append as svgAppend,
  attr as svgAttr,
  classes as svgClasses,
  create as svgCreate,
  innerSVG
} from 'tiny-svg';


import {
  getRoundRectPath
} from 'bpmn-js/lib/draw/BpmnRenderUtil';

import {
  is,
  getBusinessObject
} from 'bpmn-js/lib/util/ModelUtil';

import { isNil } from 'min-dash';

const HIGH_PRIORITY = 1500,
      TASK_BORDER_RADIUS = 2,
      COLOR_GREEN = '#52B415',
      COLOR_YELLOW = '#ffc800',
      COLOR_RED = '#cc0000';


export default class CustomRenderer extends BaseRenderer {
  constructor(eventBus, bpmnRenderer) {
    super(eventBus, HIGH_PRIORITY);

    this.bpmnRenderer = bpmnRenderer;
  }

  canRender(element) {

    // ignore labels
    return !element.labelTarget;
  }

  drawCustomShape(p, width, height, shapeType) {

    console.log('drawCustomShape');

    var indent = width / 5,
      points,
      attrs;

    points = [0, 0, width - indent, 0, width, height / 2, width - indent, height, 0, height, indent, height / 2];

    // attrs = computeStyle(attrs, {
    //   stroke: COLOR_RED,
    //   strokeWidth: 2,
    //   fill: COLOR_RED
    // });

    let polygon = null;
    if (shapeType === 'ironman') {
      polygon = svgCreate('<svg preserveAspectRatio="xMidYMid meet" height="' + height + 'px" width="' + width + 'px" id="Layer_1" version="1.1" viewBox="0 0 256 256" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><g><path d="M128,247.322C62.1,247.322,8.678,193.9,8.678,128C8.678,194.274,62.1,248,128,248    s119.322-53.726,119.322-120C247.322,193.9,193.9,247.322,128,247.322z" fill="#B71C1C" opacity="0.2"/><path d="M128,8.678C193.9,8.678,247.322,62.1,247.322,128C247.322,61.726,193.9,8,128,8    S8.678,61.726,8.678,128C8.678,62.1,62.1,8.678,128,8.678z" fill="#FFFFFF" opacity="0.2"/><circle cx="128" cy="128" fill="#F44336" r="119.322"/></g><path d="M113.963,97.672l13.896,2.58l15.294-2.903c0,0,4.082-43.071,4.677-49.35   c25.643,6.29,28.384,12.418,28.384,12.418s0.45,50.749,0.484,54.51c2.362,2.58,3.74,8.21,4.315,13.066   c-0.575-4.897-1.952-10.575-4.315-13.177c-0.034-3.794-0.484-54.972-0.484-54.972s-2.742-6.18-28.384-12.523   c-0.595,6.332-4.677,49.768-4.677,49.768l-15.294,2.928l-13.896-2.602c0,0-4.892-45.865-5.107-49.172   c-16.127,0.217-29.459,11.06-29.459,11.06v0.577c0,0,13.332-10.752,29.459-10.967C109.071,52.193,113.963,97.672,113.963,97.672z" fill="#BF360C" opacity="0.2"/><linearGradient gradientUnits="userSpaceOnUse" id="SVGID_1_" x1="72.8069" x2="215.5405" y1="66.4703" y2="209.2039"><stop offset="0" style="stop-color:#212121;stop-opacity:0.2"/><stop offset="1" style="stop-color:#212121;stop-opacity:0"/></linearGradient><path d="M247.276,131.258c-0.184-0.182-70.806-70.843-71.417-71.364c-1.285-1.607-6.826-6.694-28.028-11.894   c-0.387,4.081-2.246,23.697-3.5,36.935c-0.201,0.006-35.459-35.794-35.474-36.021C92.729,49.129,79.397,59.88,79.397,59.88v54.72   v0.113c0,0-2.471,6.758-3.84,13.283c-0.514,2.471-0.876,4.907-0.889,6.937c3.599,14.588,23.748,38.512,23.659,47.691   c0.01,0.167,0.002,0.321,0,0.48c1.711,2.645,7.329,10.65,7.329,10.65c0.332,0.464,1.758,2.04,1.929,2.304l-0.44,0.396l-8.787-8.838   c0,0-1.081,4.927-1.199,7.512c0.111,0.316,2.754,7.743,7.489,12.872c0.041-0.025,38.042,37.991,38.396,38.381   C200.788,239.116,245.686,190.588,247.276,131.258z" fill="url(#SVGID_1_)"/><g><path d="M109.689,188.63l36.744-0.161l4.247,5.268c0,0,2.603-3.124,7.231-11.397    c2.983-14.73,19.863-32.362,23.143-46.447c0.166-0.543,0.388-11.369-4.354-20.966c-0.034-3.762-0.484-54.51-0.484-54.51    S173.473,54.29,147.831,48c-0.595,6.279-4.677,49.35-4.677,49.35l-15.294,2.903l-13.896-2.58c0,0-4.892-45.479-5.107-48.758    C92.729,49.129,79.397,59.88,79.397,59.88v54.72v0.113c0,0-2.471,6.758-3.84,13.283c-0.514,2.471-0.876,4.907-0.889,6.937    c3.599,14.588,23.748,38.512,23.659,47.691c0.01,0.167,0.002,0.321,0,0.48c1.711,2.645,7.089,10.956,7.089,10.956L109.689,188.63z    " fill="#FFEB3B"/><path d="M123.195,205.258l1.532-1.613l6.451-0.161l1.693,1.855c0,0,10.967-1.935,18.224,2.661    c3.226-1.935,7.741-13.977,7.741-13.977c0.006-0.087,0.006-0.182,0.009-0.273c-0.069-2.564-0.976-6.133-0.976-6.133l-7.285,11.086    l-4.542-5.746l-35.372,0.325l-5.404,4.866l-6.907-10.531c0,0-1.081,4.927-1.199,7.512c0.111,0.316,2.754,7.743,7.489,12.872    C113.787,202.517,123.195,205.258,123.195,205.258z" fill="#FFEB3B"/></g><g><path d="M86.708,121.863c0,0,30.333,14.376,29.674,15.482c-0.484,3.629-4.032,6.773-4.032,6.773    C76.387,142.668,86.708,121.863,86.708,121.863z" fill="#FFFFFF"/><path d="M170.365,121.851c0,0-30.333,14.376-29.674,15.482c0.484,3.629,4.032,6.773,4.032,6.773    C180.687,142.655,170.365,121.851,170.365,121.851z" fill="#FFFFFF"/></g></g></svg>');
    }
    else if (shapeType === 'batman') {
      polygon = svgCreate('<svg preserveAspectRatio="xMidYMid meet" height="' + height + 'px" width="' + width + 'px" data-name="Layer 1" id="Layer_1" viewBox="0 0 128 128" xmlns="http://www.w3.org/2000/svg"><defs><style>.cls-1{fill:#f2bc0f;}.cls-2,.cls-8{fill:#fff;}.cls-2{opacity:0.3;}.cls-3{fill:#515570;}.cls-4{fill:#393c54;}.cls-5{fill:#ffd8c9;}.cls-10,.cls-12,.cls-6,.cls-7,.cls-9{fill:none;stroke-linecap:round;stroke-linejoin:round;stroke-width:2px;}.cls-6{stroke:#393c54;}.cls-10,.cls-7,.cls-9{stroke:#515570;}.cls-7{opacity:0.1;}.cls-9{opacity:0.4;}.cls-11{fill:#f8dc25;}.cls-12{stroke:#fbc0aa;}</style></defs><title/><circle class="cls-1" cx="64" cy="64" r="60"/><circle class="cls-2" cx="64" cy="64" r="48"/><path class="cls-3" d="M64,124.1a59.78,59.78,0,0,0,40-15.28l-2.39-5.68c-1.71-4-6.22-6.64-11.29-6.64H37.69c-5.07,0-9.58,2.66-11.29,6.64L24,108.82A59.78,59.78,0,0,0,64,124.1Z"/><path class="cls-4" d="M95.25,60.43c0,4.38.45,7.93-3.93,7.93a7.93,7.93,0,1,1,0-15.86C95.7,52.5,95.25,56.05,95.25,60.43Z"/><path class="cls-4" d="M44.61,60.43a7.93,7.93,0,0,1-7.93,7.93c-4.38,0-3.93-3.55-3.93-7.93s-.45-7.93,3.93-7.93A7.93,7.93,0,0,1,44.61,60.43Z"/><path class="cls-5" d="M64,95.37A28.31,28.31,0,0,1,35.68,67.05V52.43c0-15.64,12.68-25.32,28.32-25.32s28.32,9.68,28.32,25.32V67.05A28.31,28.31,0,0,1,64,95.37Z"/><path class="cls-6" d="M56.41,82.07A.91.91,0,0,1,57.25,81h13.5a.91.91,0,0,1,.84,1.07"/><path class="cls-7" d="M90.91,67A13.34,13.34,0,0,0,79.09,80.34v4.49"/><path class="cls-7" d="M37.09,67A13.34,13.34,0,0,1,48.91,80.34v4.49"/><path class="cls-4" d="M35,67.53l27.68,6.22a6.14,6.14,0,0,0,2.63,0L93,67.53V22.7a1,1,0,0,0-1.6-.8l-10,7.45s-6.12-5.8-17.39-5.8A27.83,27.83,0,0,0,45.92,30l-9.27-7.9a1,1,0,0,0-1.65.76Z"/><path class="cls-8" d="M46.13,57.75,55.88,60a5,5,0,1,1-9.75-2.21Z"/><circle class="cls-4" cx="51" cy="59.02" r="2.72"/><line class="cls-9" x1="56.36" x2="45.64" y1="60.07" y2="57.63"/><line class="cls-10" x1="56.36" x2="45.64" y1="59.07" y2="56.63"/><path class="cls-11" d="M78,111.82a.5.5,0,0,0-.26-.93H69.65a.7.7,0,0,0-.65.43h0a3.15,3.15,0,0,1-2.3,1.89l-1,.21a.36.36,0,0,1-.43-.29L65,111.72a.08.08,0,0,0-.15,0l-.28.66a2.37,2.37,0,0,0-1.06,0l-.28-.66a.08.08,0,0,0-.15,0l-.27,1.41a.36.36,0,0,1-.43.29l-1-.21a3.15,3.15,0,0,1-2.3-1.89h0a.7.7,0,0,0-.65-.43H50.29a.5.5,0,0,0-.26.93,5.67,5.67,0,0,1,2.85,4.72.49.49,0,0,0,.56.49,13.27,13.27,0,0,1,5.89.46,9.19,9.19,0,0,1,4.26,3.41.5.5,0,0,0,.82,0,9.19,9.19,0,0,1,4.26-3.41,13.27,13.27,0,0,1,5.89-.46.49.49,0,0,0,.56-.49A5.67,5.67,0,0,1,78,111.82Z"/><path class="cls-8" d="M81.87,57.75,72.12,60a5,5,0,1,0,9.75-2.21Z"/><circle class="cls-4" cx="77.06" cy="59.01" r="2.63"/><line class="cls-9" x1="71.64" x2="82.36" y1="60.07" y2="57.63"/><line class="cls-10" x1="71.64" x2="82.36" y1="59.07" y2="56.63"/><path class="cls-4" d="M93,96.5V67l-5,1.36L85.25,80.65a15.8,15.8,0,0,1-7.39,10.16l-2.14.93a29.26,29.26,0,0,1-23.44,0l-2.14-.93a15.8,15.8,0,0,1-7.39-10.16L40,68.36,35,67V96.5l-16.46,6.64,1.37,1.55a60.21,60.21,0,0,0,17.24,13l19.35-13A14,14,0,0,1,64,102.5a16.37,16.37,0,0,1,7.5,1.81l19.37,13.34a60.39,60.39,0,0,0,17-12.72c.56-.61,1.1-1.21,1.61-1.79Z"/><path class="cls-12" d="M60,90a7,7,0,0,1,8,0"/><path class="cls-3" d="M64,63.12v8.21a.51.51,0,0,1-.63.49l-3.62-1a.51.51,0,0,1-.31-.71l3.61-7.23A.5.5,0,0,1,64,63.12Z"/></svg>');
    } 
    else {
      polygon = svgCreate('<svg preserveAspectRatio="xMidYMid meet" height="' + height + 'px" width="' + width + 'px" id="Layer_1" version="1.1" viewBox="0 0 63.991 48"><g id="Superman_Logo"><g><path d="M63.869,10.466L52.841,0.049L52.788,0h-0.07H11.274h-0.071L11.15,0.049L0.123,10.466L0,10.582    l0.109,0.128l31.75,37.13L31.996,48l0.137-0.16l31.75-37.13l0.108-0.128L63.869,10.466z M43.606,3.656h2.313h0.148l-0.031,0.146    L45.948,4.21l-0.13,0.404l-0.154,0.361l-0.03,0.072l-0.031,0.07l-0.03,0.063L45.54,5.25l-0.033,0.063l-0.033,0.063l-0.001,0.002    l-0.031,0.059l-0.032,0.057l-0.031,0.053h-0.001l-0.018,0.031v0.001l-0.019,0.028v0.002l-0.083,0.137l-0.108-0.119l-1.631-1.771    l-0.184-0.199H43.606z M12.441,6.999L11.447,8.22l-0.969,1.377l-0.772,1.475l-0.169,0.321l-0.158,0.322l-0.145,0.322l-0.146,0.324    l-0.136,0.331l-0.125,0.337l-0.128,0.347l-0.115,0.349l-0.1,0.351l-0.02,0.071l-0.02,0.068l-0.018,0.067l-0.019,0.069L8.392,14.42    l-0.017,0.069l-0.001,0.002l-0.056,0.225L8.167,14.54L5.04,10.899l-0.073-0.084l0.082-0.078l7.51-7.048l0.034-0.032h0.048h2.622    h0.295l-0.212,0.204l-0.884,0.85l-1.023,1.065L12.441,6.999z M38.725,34.448l-6.638,7.727l-0.091,0.106l-0.091-0.106l-6.972-8.116    l-0.235-0.273l0.353,0.08l0.735,0.169l0.841,0.168l0.925,0.145l0.926,0.143l1.015,0.121l1.086,0.074l1.726,0.119l1.9,0.002    l1.997-0.205l0.388-0.04l0.394-0.048l0.398-0.057l0.399-0.057l0.399-0.066l0.399-0.072l0.033-0.007l0.331-0.061L38.725,34.448z     M45.038,25.864l-0.007,0.04l-0.009,0.04l-0.01,0.041l-0.012,0.04l-0.013,0.039h-0.001l-0.005,0.015v0.001l-0.084,0.229    l-0.154,0.231l-0.204,0.225l-0.038,0.042l-0.041,0.043l-0.044,0.045l-0.044,0.043l-0.044,0.043l-0.045,0.04l-0.002,0.002    l-0.002,0.003c-0.626,0.573-1.516,1.075-2.31,1.383l-0.153,0.061l-0.152,0.053l-0.146,0.045l-0.147,0.045l-0.141,0.036    L41.1,28.676l-0.003,0.001l-0.759,0.157l-0.787,0.098l-0.802,0.058l-0.797,0.058l-0.814,0.019h-0.819h-0.829l-0.83-0.021    l-0.818-0.021l-0.503-0.012l-0.5-0.014L32.35,28.99l-0.259-0.005l-0.256-0.002l-0.252-0.002h-0.05l-0.034-0.033l-0.271-0.271    l-0.224-0.234l-0.211-0.223l-0.002-0.001c-0.633-0.666-1.175-1.235-1.825-1.642l-0.646-0.404l-0.764-0.25l-1.088-0.035    l-0.313-0.01l-0.324-0.015l-0.324-0.016l-0.067-0.003h-0.001l-0.616-0.027l-0.617-0.029l-0.611-0.002l-0.611-0.001l-0.613,0.024    l-0.61,0.08l-0.388,0.05l-0.479,0.222l-0.477,0.327l-0.095,0.065l-0.094,0.068l-0.093,0.071l-0.092,0.072l-0.093,0.075    l-0.091,0.08l-0.006,0.005l-0.088,0.078l-0.088,0.08l-0.085,0.082l-0.051,0.05l-0.051,0.052l-0.001,0.001l-0.001,0.002v-0.002    l-0.056,0.059l-0.058,0.06l-0.091,0.097l-0.087-0.102l-4.987-5.806l-0.261-0.303l0.386,0.113l0.016,0.003    c2.29,0.625,4.702,0.978,7.159,1.193l2.467,0.215l2.501,0.079l2.471,0.077l1.092,0.033l1.085,0.034l1.071,0.047l1.078,0.046    l1.066,0.058l1.045,0.08l0.018,0.001c0.234,0.019,0.474,0.035,0.715,0.051l0.26,0.018l0.253,0.016l0.252,0.016l1.102,0.068    l1.159,0.074l1.134,0.143l1.118,0.143l1.088,0.211l0.975,0.346v-0.001l0.092,0.034l0.063,0.022v0.001    c0.468,0.176,0.806,0.368,1.035,0.57l0.049,0.042l0.043,0.042l0.037,0.042l0.039,0.042l0.034,0.045l0.031,0.044l0.001,0.001    l0.001,0.002c0.133,0.191,0.179,0.395,0.158,0.601L45.038,25.864z M58.952,10.899l-6.662,7.757l-0.102,0.118l-0.088-0.129    l-0.163-0.234l-0.161-0.219l-0.154-0.191h-0.001l-0.027-0.034l-0.029-0.036l-0.032-0.038l-0.028-0.034l-0.029-0.034l-0.029-0.033    l-0.001-0.001c-0.036-0.041-0.074-0.084-0.114-0.125l-0.021-0.022l-0.02-0.021l-0.001-0.001l-0.001-0.001l-0.037-0.039    l-0.038-0.036l-0.036-0.033l-0.019-0.018l-0.018-0.017v0.001l-0.001-0.001l-0.001-0.001l-0.002-0.001l-1.813-1.598l-2.051-1.17    l-2.207-0.771l-0.429-0.15l-0.436-0.135l-0.44-0.12c-0.436-0.119-0.879-0.224-1.326-0.314h-0.002l-0.008-0.003h-0.004    l-0.001-0.001l-0.452-0.091l-0.455-0.076l-0.455-0.062l-0.074-0.009l-0.088-0.013L40.79,12.95l-0.099-0.012l-0.089-0.011    l-0.08-0.008l-0.007-0.001l-0.451-0.05l-0.457-0.036l-0.46-0.021l-0.095-0.005l-0.092-0.004L38.873,12.8l-0.094-0.004    l-0.092-0.002l-0.089-0.003L38.57,12.79v0.001h-0.001l-0.002-0.001h-0.032l-0.752-0.018l-0.752-0.004l-0.752,0.003l-0.752,0.002    l-0.754,0.01l-0.754,0.009h-0.059l-2.286,0.027l-2.285,0.025l-2.281-0.158h-0.001H27.1l-1.16-0.082l-1.812-0.278l-1.589-0.565    l-0.311-0.111l-0.303-0.121l-0.288-0.134l-0.289-0.134l-0.273-0.146l-0.252-0.157l-0.011-0.008h-0.001l-0.347-0.218l-0.306-0.241    l-0.243-0.267l-0.049-0.052l-0.045-0.055l-0.043-0.053c-0.044-0.055-0.084-0.11-0.121-0.166h-0.001h-0.001l0.001-0.001    c-0.187-0.274-0.31-0.577-0.353-0.907l-0.009-0.063l-0.005-0.066l-0.002-0.065V8.794c-0.002-0.066-0.001-0.135,0.003-0.201V8.592    l0.001-0.01l0.008-0.11h0.003c0.035-0.292,0.13-0.602,0.29-0.932l0.035-0.071l0.039-0.073L19.71,7.32l0.042-0.075l0.046-0.076    l0.048-0.075l0.008-0.013l0.751-1.174l1.271-0.828l1.551-0.551l0.297-0.105l0.311-0.096l0.322-0.088l0.319-0.086l0.328-0.076    l0.334-0.067l0.004-0.001c0.334-0.066,0.678-0.124,1.029-0.172l0.059-0.009l0.067-0.009l0.081-0.011l0.088-0.011l0.069-0.01    l0.053-0.006l0.006-0.001l0.354-0.041l0.358-0.033l0.358-0.024h0.001l0.209-0.014h0.001l0.21-0.012h0.001l0.014-0.001h0.006h0.001    h0.12h2.265V3.65l0.126,0.006l1.523,0.072l1.488,0.192l1.325,0.28l0.259,0.056l0.253,0.057l0.245,0.062l0.24,0.06l0.239,0.064    l0.235,0.066l0.012,0.004l0.119,0.035c0.189,0.057,0.371,0.115,0.544,0.174h0.001l0.121,0.042h0.001l0.12,0.043l0.003,0.001    l0.203,0.072l0.195,0.076l0.185,0.078l0.001,0.001l0.105,0.045l0.001,0.001l0.011,0.004L38.25,5.14l0.104,0.049l0.6,0.27    l0.553,0.325l0.502,0.384l0.504,0.387l0.454,0.445l0.401,0.512l0.402,0.516l0.352,0.582l0.297,0.657l0.296,0.655l0.242,0.729    l0.186,0.81l0.032,0.139h0.143h10.716h0.18v-0.178V6.574V6.298l0.202,0.19l4.527,4.249l0.083,0.078L58.952,10.899z" style="fill:#ED7161;"/></g></g></svg>');
    }

    svgAttr(polygon, {
      points: points
    });

    // svgAttr(polygon, attrs);

    svgAppend(p, polygon);

    return polygon;    
  };


  drawShape(parentNode, element) {

    const suitabilityScore = this.getSuitabilityScore(element);
    let shape = null;
    if (suitabilityScore === 200) {
      const shapeType = this.getShapeType(element);
      // console.log('getShapeType ', this.getShapeType(element));
       shape = this.drawCustomShape(parentNode, element.width, element.height, shapeType);
      // shape = this.bpmnRenderer.drawShape(parentNode, element);
      // var text = svgCreate('text'); 

      // svgAttr(text, {
      //   // fill: '#fff',
      //   // width:element.width + 'px',
      //   transform: 'translate(0,' + element.height + ')'
      // });
  
      // svgClasses(text).add('djs-label'); 
    
      // svgAppend(text, document.createTextNode(element.businessObject.name)); 
    
      // svgAppend(parentNode, text);
      const businessObject = element.businessObject;
       if (businessObject.name) {
          const width = element.width;
          var lines = businessObject.name.trim().split('\n');
          var textArea = svgCreate('text');
          var text = '';
          var fontsize = 12;
          for (var i = 0; i < lines.length; ++i) {
            text += '<tspan x="' + width/2 + '" y="-' + ((lines.length-i)*fontsize-fontsize/2) + '">' + lines[i] + '</tspan>';
          }
          innerSVG(textArea,text);
          svgAttr(textArea, {
            fontFamily: 'Arial, sans-serif',
            fontSize: fontsize,
            textAnchor: 'middle',
            width: width,
            x: width,
            y: 0,
            transform: 'translate(0,' + (element.height + 20 ) + ')'
          });
          
          svgAppend(parentNode, textArea);
        }

    }
    else {
       shape = this.bpmnRenderer.drawShape(parentNode, element);
      // shape = this.drawCustomShape(parentNode, element.width, element.height);
    }

    return shape;
  }

  getShapePath(shape) {
    if (is(shape, 'bpmn:Task')) {
      return getRoundRectPath(shape, TASK_BORDER_RADIUS);
    }

    return this.bpmnRenderer.getShapePath(shape);
  }

  getSuitabilityScore(element) {
    const businessObject = getBusinessObject(element);
  
    const { suitable } = businessObject;

    return Number.isFinite(suitable) ? suitable : null;
  }

  getShapeType(element) {
    const businessObject =  (element && element.businessObject) || element;
  
    const { shapeType } = businessObject;

    return shapeType ? shapeType : null;
  }


  getColor(suitabilityScore) {
    if (suitabilityScore > 75) {
      return COLOR_GREEN;
    } else if (suitabilityScore > 25) {
      return COLOR_YELLOW;
    }

    return COLOR_RED;
  }
}

CustomRenderer.$inject = [ 'eventBus', 'bpmnRenderer' ];

// helpers //////////